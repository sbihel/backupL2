from combat import *
from variousShips import *
from random import *
import multiprocessing as mp


def fightsWithFileName(nbFights, fileShip1, fileShip2):
    if fileShip1[-4:] == '.xml':
        fileShip1 = fileShip1[:-4]
    if fileShip2[-4:] == '.xml':
        fileShip2 = fileShip2[:-4]
    xmlID1, xmlID2, type1, type2, name1, name2 = '', '', 'type', 'type', '', ''
    for i in range(len(fileShip1)):
        if fileShip1[len(fileShip1)-1-i] not in 'ABC':
            xmlID1 = fileShip1[len(fileShip1)-1-i] + xmlID1
        else:
            type1 += fileShip1[len(fileShip1)-1-i]
            name1 = fileShip1[:len(fileShip1)-1-i]
            break
    for i in range(len(fileShip2)):
        if fileShip2[len(fileShip2)-1-i] not in 'ABC':
            xmlID2 = fileShip2[len(fileShip2)-1-i] + xmlID2
        else:
            type2 += fileShip2[len(fileShip2)-1-i]
            name2 = fileShip2[:len(fileShip2)-1-i]
            break
    return fights(nbFights, name1, type1, xmlID1, name2, type2, xmlID2)


def fights(nbFights, nameShip1, typeShip1, xmlIDShip1, nameShip2, typeShip2, xmlIDShip2):
    pool = mp.Pool(processes=mp.cpu_count())
    t1 = time()
    results = [pool.apply_async(oneFightProcess, args=(i, extractShip(nameShip1, typeShip1, xmlIDShip1, 1),
                                                       extractShip(nameShip2, typeShip2, xmlIDShip2, 2)))
               for i in range(nbFights)]
    output = [r.get() for r in results]
    t2 = time()
    print(nameShip1+typeShip1[-1]+xmlIDShip1+' won '+str(output.count('Ship 1 won'))+' times on '+str(nbFights))
    print('It took '+str(t2-t1)+' seconds -> '+str((t2-t1)/nbFights)+' seconds per fight.')
    return output


def oneFightProcess(i, ship1, ship2):
    s = randrange(999999999)
    seed(s)
    c = combat(ship1, ship2)
    print('Fight #'+str(i)+'\nSeed #'+str(s))
    return c


if __name__ == '__main__':
    print(fights(5, 'kestrel', 'typeA', '0', 'engiCruiser', 'typeA', '0'))