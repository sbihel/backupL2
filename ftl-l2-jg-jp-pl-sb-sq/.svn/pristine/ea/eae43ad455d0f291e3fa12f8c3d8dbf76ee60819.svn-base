from fightsWithVariousShips import *


def runTournament(maxCost, nbShips, nbfights, **kwargs):
    """
    kwargs['nameShip'] and kwargs['typeShip'] are lists of strings.
    """
    if 'nameShip' in kwargs:
        nameS = kwargs['nameShip']
        if len(nameS) < nbShips:
            nameS += [nameS[-1]] * (nbShips - len(nameS))
    if 'typeShip' in kwargs:
        typeS = kwargs['typeShip']
        if len(typeS) < nbShips:
            typeS += [typeS[-1]] * (nbShips - len(typeS))

    t1 = time()

    listShip = []
    victories = {}

    for i in range(nbShips):

        if 'nameShip' in kwargs and 'typeShip' in kwargs:
            listShip += [createRandomShip(maxCost, nameShip=nameS[0], typeShip=typeS[0])]
            nameS = nameS[1:]
            typeS = typeS[1:]
        else:  # There isn't nameShip AND typeShip
            listShip += [createRandomShip(maxCost)]

        victories[listShip[i]] = 0

    print('\nList of ships : '+str(listShip))

    nb = 0

    for indexT in range(len(listShip)):
        ship = listShip[0]
        del (listShip[0])
        for ship2 in listShip:

            # l=fights(nbfights, nameS, typeS, ship[len(nameS)+1:-4], nameS, typeS, ship2[len(nameS)+1:-4] )

            # test sur vaisseaux vides (pas de problÃ¨mes dans combat)

            l = fightsWithFileName(nbfights, ship, ship2)
            print(l)
            cpt1 = l.count("Ship 1 won")
            cpt2 = len(l)-cpt1
            tot = cpt1 + cpt2

            if cpt1 == 0:
                victories[ship2] += 1
            elif cpt2 == 0:
                victories[ship] += 1
            else:
                if cpt1/tot > 0.55:
                    victories[ship] += 1
                elif cpt2/tot > 0.55:
                    victories[ship2] += 1
            nb += nbfights

    t2 = time()
    print('Total time : '+str((t2-t1)/60)+'mn')
    print('Number of fights : '+str(nb))
    print('Time for one fight : '+str((t2-t1)/nb))

    print(victories)


def approximateTime(NBships, NBfights):
    t1 = time()
    for i in range(3):
        ship = createRandomShip(400)
        ship2 = createRandomShip(400)
        fightsWithFileName(1, ship, ship2)
        deleteShip(ship)
        deleteShip(ship2)
    t2 = time()
    timeF = (t2 - t1)/3
    nbcore = mp.cpu_count()
    nb = NBfights * ((NBships-1)*(NBships/2))
    print('')
    print('============  Estimation du tournoi  =============')
    print('For '+str(NBships)+' ships with '+str(NBfights)+' rounds')
    print('Number of core : '+str(nbcore))
    print('Number of fights : '+str(nb))
    print('Time for one fight : '+str(timeF))
    print('Total time : '+str(nb*timeF/(60*nbcore))+'mn')
    print('')


def tournament(listShips, nbFights):
    listShip = listShips[:]
    t1 = time()

    victories = {}
    for s in listShips:
        victories[s] = 0

    nb = nbFights * ((len(listShip)-1)*(len(listShip)/2))

    for indexT in range(len(listShip)):
        ship = listShip[0]
        listShip = listShip[1:]
        for ship2 in listShip:
            l = fightsWithFileName(nbFights, ship, ship2)
            # print(l)
            cpt1 = l.count("Ship 1 won")
            cpt2 = len(l)-cpt1
            tot = cpt1 + cpt2

            if cpt1 == 0:
                victories[ship2] += 1
            elif cpt2 == 0:
                victories[ship] += 1
            else:
                if cpt1/tot > 0.55:
                    victories[ship] += 1
                elif cpt2/tot > 0.55:
                    victories[ship2] += 1

    t2 = time()
    # print('Total time : '+str((t2-t1)/60)+'mn')
    # print('Number of fights : '+str(nb))
    # print('Time for one fight : '+str((t2-t1)/nb))

    print(victories)
    return victories


if __name__ == '__main__':
    mostcost = 500
    nbfights = 3
    nbships = 10

    approximateTime(nbships, nbfights)

    #runTournament(mostcost, nbships, nbfights)