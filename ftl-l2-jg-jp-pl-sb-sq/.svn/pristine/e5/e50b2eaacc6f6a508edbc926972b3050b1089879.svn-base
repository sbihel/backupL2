<?xml version="1.0" encoding="ascii"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
          "DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>combat</title>
  <link rel="stylesheet" href="epydoc.css" type="text/css" />
  <script type="text/javascript" src="epydoc.js"></script>
</head>

<body bgcolor="white" text="black" link="blue" vlink="#204080"
      alink="#204080">
<!-- ==================== NAVIGATION BAR ==================== -->
<table class="navbar" border="0" width="100%" cellpadding="0"
       bgcolor="#a0c0ff" cellspacing="0">
  <tr valign="middle">

  <!-- Tree link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="module-tree.html">Trees</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Index link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="identifier-index.html">Indices</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Help link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="help.html">Help</a>&nbsp;&nbsp;&nbsp;</th>

      <th class="navbar" width="100%"></th>
  </tr>
</table>
<table width="100%" cellpadding="0" cellspacing="0">
  <tr valign="top">
    <td width="100%">
      <span class="breadcrumbs">
        Module&nbsp;combat
      </span>
    </td>
    <td>
      <table cellpadding="0" cellspacing="0">
        <!-- hide/show private -->
        <tr><td align="right"><span class="options">[<a href="javascript:void(0);" class="privatelink"
    onclick="toggle_private();">hide&nbsp;private</a>]</span></td></tr>
        <tr><td align="right"><span class="options"
            >[<a href="frames.html" target="_top">frames</a
            >]&nbsp;|&nbsp;<a href="combat-pysrc.html"
            target="_top">no&nbsp;frames</a>]</span></td></tr>
      </table>
    </td>
  </tr>
</table>
<h1 class="epydoc">Source Code for <a href="combat-module.html">Module combat</a></h1>
<pre class="py-src">
<a name="L1"></a><tt class="py-lineno"> 1</tt>  <tt class="py-line"><tt class="py-keyword">from</tt> <tt class="py-name">random</tt> <tt class="py-keyword">import</tt> <tt class="py-name">randint</tt> </tt>
<a name="L2"></a><tt class="py-lineno"> 2</tt>  <tt class="py-line"> </tt>
<a name="L3"></a><tt class="py-lineno"> 3</tt>  <tt class="py-line"><tt class="py-string">"""</tt> </tt>
<a name="L4"></a><tt class="py-lineno"> 4</tt>  <tt class="py-line"><tt class="py-string">Generation module for fights between ships.</tt> </tt>
<a name="L5"></a><tt class="py-lineno"> 5</tt>  <tt class="py-line"><tt class="py-string">"""</tt> </tt>
<a name="L6"></a><tt class="py-lineno"> 6</tt>  <tt class="py-line"> </tt>
<a name="L7"></a><tt class="py-lineno"> 7</tt>  <tt class="py-line"> </tt>
<a name="combat"></a><div id="combat-def"><a name="L8"></a><tt class="py-lineno"> 8</tt> <a class="py-toggle" href="#" id="combat-toggle" onclick="return toggle('combat');">-</a><tt class="py-line"><tt class="py-keyword">def</tt> <a class="py-def-name" href="combat-module.html#combat">combat</a><tt class="py-op">(</tt><tt class="py-param">ship1</tt><tt class="py-op">,</tt> <tt class="py-param">ship2</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="combat-collapsed" style="display:none;" pad="++" indent="++++"></div><div id="combat-expanded"><a name="L9"></a><tt class="py-lineno"> 9</tt>  <tt class="py-line">    <tt class="py-docstring">"""</tt> </tt>
<a name="L10"></a><tt class="py-lineno">10</tt>  <tt class="py-line"><tt class="py-docstring">    Do a battle between two ships.</tt> </tt>
<a name="L11"></a><tt class="py-lineno">11</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L12"></a><tt class="py-lineno">12</tt>  <tt class="py-line"><tt class="py-docstring">    @param ship1: A ship built with the class Ship.</tt> </tt>
<a name="L13"></a><tt class="py-lineno">13</tt>  <tt class="py-line"><tt class="py-docstring">    @type ship1: Object of class Ship.</tt> </tt>
<a name="L14"></a><tt class="py-lineno">14</tt>  <tt class="py-line"><tt class="py-docstring">    @param ship2: A ship built with the class Ship.</tt> </tt>
<a name="L15"></a><tt class="py-lineno">15</tt>  <tt class="py-line"><tt class="py-docstring">    @type ship2: Object of class Ship.</tt> </tt>
<a name="L16"></a><tt class="py-lineno">16</tt>  <tt class="py-line"><tt class="py-docstring">    """</tt> </tt>
<a name="L17"></a><tt class="py-lineno">17</tt>  <tt class="py-line"> </tt>
<a name="L18"></a><tt class="py-lineno">18</tt>  <tt class="py-line">    <tt class="py-comment"># FIGHT</tt> </tt>
<a name="L19"></a><tt class="py-lineno">19</tt>  <tt class="py-line">    <tt class="py-comment"># hp1 = 30</tt> </tt>
<a name="L20"></a><tt class="py-lineno">20</tt>  <tt class="py-line">    <tt class="py-comment"># hp2 = 30</tt> </tt>
<a name="L21"></a><tt class="py-lineno">21</tt>  <tt class="py-line">    <tt class="py-name">roundF</tt> <tt class="py-op">=</tt> <tt class="py-number">0</tt> </tt>
<a name="L22"></a><tt class="py-lineno">22</tt>  <tt class="py-line">    <tt class="py-keyword">while</tt> <tt class="py-keyword">not</tt> <tt class="py-name">ship1</tt><tt class="py-op">.</tt><tt id="link-0" class="py-name" targets="Method ship.Ship.ko()=ship.Ship-class.html#ko"><a title="ship.Ship.ko" class="py-name" href="#" onclick="return doclink('link-0', 'ko', 'link-0');">ko</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt> <tt class="py-keyword">and</tt> <tt class="py-keyword">not</tt> <tt class="py-name">ship2</tt><tt class="py-op">.</tt><tt id="link-1" class="py-name"><a title="ship.Ship.ko" class="py-name" href="#" onclick="return doclink('link-1', 'ko', 'link-0');">ko</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt> <tt class="py-keyword">and</tt> <tt class="py-name">len</tt><tt class="py-op">(</tt><tt class="py-name">ship1</tt><tt class="py-op">.</tt><tt id="link-2" class="py-name" targets="Method ship.Ship.getCrew()=ship.Ship-class.html#getCrew"><a title="ship.Ship.getCrew" class="py-name" href="#" onclick="return doclink('link-2', 'getCrew', 'link-2');">getCrew</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> <tt class="py-op">&gt;</tt> <tt class="py-number">0</tt> <tt class="py-keyword">and</tt> <tt class="py-name">len</tt><tt class="py-op">(</tt><tt class="py-name">ship2</tt><tt class="py-op">.</tt><tt id="link-3" class="py-name"><a title="ship.Ship.getCrew" class="py-name" href="#" onclick="return doclink('link-3', 'getCrew', 'link-2');">getCrew</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> <tt class="py-op">&gt;</tt> <tt class="py-number">0</tt><tt class="py-op">:</tt> </tt>
<a name="L23"></a><tt class="py-lineno">23</tt>  <tt class="py-line">        <tt class="py-name">ship1</tt><tt class="py-op">.</tt><tt id="link-4" class="py-name" targets="Method room.Room.cooldowns()=room.Room-class.html#cooldowns,Method ship.Ship.cooldowns()=ship.Ship-class.html#cooldowns"><a title="room.Room.cooldowns
ship.Ship.cooldowns" class="py-name" href="#" onclick="return doclink('link-4', 'cooldowns', 'link-4');">cooldowns</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L24"></a><tt class="py-lineno">24</tt>  <tt class="py-line">        <tt class="py-name">ship2</tt><tt class="py-op">.</tt><tt id="link-5" class="py-name"><a title="room.Room.cooldowns
ship.Ship.cooldowns" class="py-name" href="#" onclick="return doclink('link-5', 'cooldowns', 'link-4');">cooldowns</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L25"></a><tt class="py-lineno">25</tt>  <tt class="py-line"> </tt>
<a name="L26"></a><tt class="py-lineno">26</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">randint</tt><tt class="py-op">(</tt><tt class="py-number">1</tt><tt class="py-op">,</tt> <tt class="py-number">100</tt><tt class="py-op">)</tt> <tt class="py-op">&gt;</tt> <tt class="py-number">49</tt><tt class="py-op">:</tt> </tt>
<a name="L27"></a><tt class="py-lineno">27</tt>  <tt class="py-line">            <tt class="py-name">ship1</tt><tt class="py-op">.</tt><tt id="link-6" class="py-name" targets="Method ship.Ship.attackOpponent()=ship.Ship-class.html#attackOpponent"><a title="ship.Ship.attackOpponent" class="py-name" href="#" onclick="return doclink('link-6', 'attackOpponent', 'link-6');">attackOpponent</a></tt><tt class="py-op">(</tt><tt class="py-name">ship2</tt><tt class="py-op">)</tt> </tt>
<a name="L28"></a><tt class="py-lineno">28</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-keyword">not</tt> <tt class="py-name">ship2</tt><tt class="py-op">.</tt><tt id="link-7" class="py-name"><a title="ship.Ship.ko" class="py-name" href="#" onclick="return doclink('link-7', 'ko', 'link-0');">ko</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L29"></a><tt class="py-lineno">29</tt>  <tt class="py-line">                <tt class="py-name">ship2</tt><tt class="py-op">.</tt><tt id="link-8" class="py-name"><a title="ship.Ship.attackOpponent" class="py-name" href="#" onclick="return doclink('link-8', 'attackOpponent', 'link-6');">attackOpponent</a></tt><tt class="py-op">(</tt><tt class="py-name">ship1</tt><tt class="py-op">)</tt> </tt>
<a name="L30"></a><tt class="py-lineno">30</tt>  <tt class="py-line">        <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L31"></a><tt class="py-lineno">31</tt>  <tt class="py-line">            <tt class="py-name">ship2</tt><tt class="py-op">.</tt><tt id="link-9" class="py-name"><a title="ship.Ship.attackOpponent" class="py-name" href="#" onclick="return doclink('link-9', 'attackOpponent', 'link-6');">attackOpponent</a></tt><tt class="py-op">(</tt><tt class="py-name">ship1</tt><tt class="py-op">)</tt> </tt>
<a name="L32"></a><tt class="py-lineno">32</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-keyword">not</tt> <tt class="py-name">ship1</tt><tt class="py-op">.</tt><tt id="link-10" class="py-name"><a title="ship.Ship.ko" class="py-name" href="#" onclick="return doclink('link-10', 'ko', 'link-0');">ko</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L33"></a><tt class="py-lineno">33</tt>  <tt class="py-line">                <tt class="py-name">ship1</tt><tt class="py-op">.</tt><tt id="link-11" class="py-name"><a title="ship.Ship.attackOpponent" class="py-name" href="#" onclick="return doclink('link-11', 'attackOpponent', 'link-6');">attackOpponent</a></tt><tt class="py-op">(</tt><tt class="py-name">ship2</tt><tt class="py-op">)</tt> </tt>
<a name="L34"></a><tt class="py-lineno">34</tt>  <tt class="py-line">         </tt>
<a name="L35"></a><tt class="py-lineno">35</tt>  <tt class="py-line">        <tt class="py-comment"># if hp1!=ship1.getHP() or ship2.getHP()!=hp2 :</tt> </tt>
<a name="L36"></a><tt class="py-lineno">36</tt>  <tt class="py-line">        <tt class="py-comment">#    print('HP Ship1 : '+str(ship1.getHP())+'  |||   HP Ship2 : '+str(ship2.getHP()))</tt> </tt>
<a name="L37"></a><tt class="py-lineno">37</tt>  <tt class="py-line">        <tt class="py-comment"># hp1 = ship1.getHP()</tt> </tt>
<a name="L38"></a><tt class="py-lineno">38</tt>  <tt class="py-line">        <tt class="py-comment"># hp2 = ship2.getHP()</tt> </tt>
<a name="L39"></a><tt class="py-lineno">39</tt>  <tt class="py-line"> </tt>
<a name="L40"></a><tt class="py-lineno">40</tt>  <tt class="py-line">        <tt class="py-comment"># if showShipState and roundF % (divisionTime*8) == 0:</tt> </tt>
<a name="L41"></a><tt class="py-lineno">41</tt>  <tt class="py-line">        <tt class="py-comment">#     print('=======Status on round ', roundF, '=======')</tt> </tt>
<a name="L42"></a><tt class="py-lineno">42</tt>  <tt class="py-line">        <tt class="py-comment">#     displayInfos(ship1)</tt> </tt>
<a name="L43"></a><tt class="py-lineno">43</tt>  <tt class="py-line">        <tt class="py-comment">#     displayInfos(ship2)</tt> </tt>
<a name="L44"></a><tt class="py-lineno">44</tt>  <tt class="py-line">        <tt class="py-name">roundF</tt> <tt class="py-op">+=</tt> <tt class="py-number">1</tt> </tt>
<a name="L45"></a><tt class="py-lineno">45</tt>  <tt class="py-line"> </tt>
<a name="L46"></a><tt class="py-lineno">46</tt>  <tt class="py-line">    <tt class="py-keyword">if</tt> <tt class="py-name">ship1</tt><tt class="py-op">.</tt><tt id="link-12" class="py-name"><a title="ship.Ship.ko" class="py-name" href="#" onclick="return doclink('link-12', 'ko', 'link-0');">ko</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt> <tt class="py-keyword">or</tt> <tt class="py-name">len</tt><tt class="py-op">(</tt><tt class="py-name">ship1</tt><tt class="py-op">.</tt><tt id="link-13" class="py-name"><a title="ship.Ship.getCrew" class="py-name" href="#" onclick="return doclink('link-13', 'getCrew', 'link-2');">getCrew</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> <tt class="py-op">==</tt> <tt class="py-number">0</tt><tt class="py-op">:</tt> </tt>
<a name="L47"></a><tt class="py-lineno">47</tt>  <tt class="py-line">        <tt class="py-keyword">print</tt><tt class="py-op">(</tt><tt class="py-string">'Ship '</tt><tt class="py-op">+</tt><tt class="py-name">ship2</tt><tt class="py-op">.</tt><tt id="link-14" class="py-name" targets="Method drones.Drone.getName()=drones.Drone-class.html#getName,Method ship.Ship.getName()=ship.Ship-class.html#getName,Method systems.System.getName()=systems.System-class.html#getName,Method weapon_module_WIP.Weapon.getName()=weapon_module_WIP.Weapon-class.html#getName"><a title="drones.Drone.getName
ship.Ship.getName
systems.System.getName
weapon_module_WIP.Weapon.getName" class="py-name" href="#" onclick="return doclink('link-14', 'getName', 'link-14');">getName</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">+</tt><tt class="py-string">' '</tt><tt class="py-op">+</tt><tt class="py-name">ship2</tt><tt class="py-op">.</tt><tt id="link-15" class="py-name" targets="Method drones.Drone.getType()=drones.Drone-class.html#getType,Method ship.Ship.getType()=ship.Ship-class.html#getType,Method weapon_module_WIP.Weapon.getType()=weapon_module_WIP.Weapon-class.html#getType"><a title="drones.Drone.getType
ship.Ship.getType
weapon_module_WIP.Weapon.getType" class="py-name" href="#" onclick="return doclink('link-15', 'getType', 'link-15');">getType</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">+</tt><tt class="py-string">' ('</tt><tt class="py-op">+</tt><tt class="py-name">str</tt><tt class="py-op">(</tt><tt class="py-name">ship2</tt><tt class="py-op">.</tt><tt id="link-16" class="py-name" targets="Method ship.Ship.getID()=ship.Ship-class.html#getID"><a title="ship.Ship.getID" class="py-name" href="#" onclick="return doclink('link-16', 'getID', 'link-16');">getID</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">)</tt><tt class="py-op">+</tt><tt class="py-string">') won'</tt><tt class="py-op">)</tt> </tt>
<a name="L48"></a><tt class="py-lineno">48</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-string">'Ship 2 won'</tt> </tt>
<a name="L49"></a><tt class="py-lineno">49</tt>  <tt class="py-line">    <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L50"></a><tt class="py-lineno">50</tt>  <tt class="py-line">        <tt class="py-keyword">print</tt><tt class="py-op">(</tt><tt class="py-string">'Ship '</tt><tt class="py-op">+</tt><tt class="py-name">ship1</tt><tt class="py-op">.</tt><tt id="link-17" class="py-name"><a title="drones.Drone.getName
ship.Ship.getName
systems.System.getName
weapon_module_WIP.Weapon.getName" class="py-name" href="#" onclick="return doclink('link-17', 'getName', 'link-14');">getName</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">+</tt><tt class="py-string">' '</tt><tt class="py-op">+</tt><tt class="py-name">ship1</tt><tt class="py-op">.</tt><tt id="link-18" class="py-name"><a title="drones.Drone.getType
ship.Ship.getType
weapon_module_WIP.Weapon.getType" class="py-name" href="#" onclick="return doclink('link-18', 'getType', 'link-15');">getType</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">+</tt><tt class="py-string">' ('</tt><tt class="py-op">+</tt><tt class="py-name">str</tt><tt class="py-op">(</tt><tt class="py-name">ship1</tt><tt class="py-op">.</tt><tt id="link-19" class="py-name"><a title="ship.Ship.getID" class="py-name" href="#" onclick="return doclink('link-19', 'getID', 'link-16');">getID</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">)</tt><tt class="py-op">+</tt><tt class="py-string">') won'</tt><tt class="py-op">)</tt> </tt>
<a name="L51"></a><tt class="py-lineno">51</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-string">'Ship 1 won'</tt> </tt>
</div><a name="L52"></a><tt class="py-lineno">52</tt>  <tt class="py-line"> </tt><script type="text/javascript">
<!--
expandto(location.href);
// -->
</script>
</pre>
<br />
<!-- ==================== NAVIGATION BAR ==================== -->
<table class="navbar" border="0" width="100%" cellpadding="0"
       bgcolor="#a0c0ff" cellspacing="0">
  <tr valign="middle">

  <!-- Tree link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="module-tree.html">Trees</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Index link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="identifier-index.html">Indices</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Help link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="help.html">Help</a>&nbsp;&nbsp;&nbsp;</th>

      <th class="navbar" width="100%"></th>
  </tr>
</table>
<table border="0" cellpadding="0" cellspacing="0" width="100%%">
  <tr>
    <td align="left" class="footer">
    Generated by Epydoc 3.0.1 on Sat Dec  6 17:26:51 2014
    </td>
    <td align="right" class="footer">
      <a target="mainFrame" href="http://epydoc.sourceforge.net"
        >http://epydoc.sourceforge.net</a>
    </td>
  </tr>
</table>

<script type="text/javascript">
  <!--
  // Private objects are initially displayed (because if
  // javascript is turned off then we want them to be
  // visible); but by default, we want to hide them.  So hide
  // them unless we have a cookie that says to show them.
  checkCookie();
  // -->
</script>
</body>
</html>
