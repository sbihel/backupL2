from tkinter import *
from variousShips import *

def FileToShip(fileShip1):

    if fileShip1[-4:] == '.xml':
        fileShip1 = fileShip1[:-4]

    xmlID1, type1, name1 = '',  'type', ''
    for i in range(len(fileShip1)):
        if fileShip1[len(fileShip1)-1-i] not in 'ABC':
            xmlID1 = fileShip1[len(fileShip1)-1-i] + xmlID1
        else:
            type1 += fileShip1[len(fileShip1)-1-i]
            name1 = fileShip1[:len(fileShip1)-1-i]
            break

    ship = extractShip(name1, type1, xmlID1, 1)

    return ship


class FenApp(Tk):

    def __init__(self, ship):

        Tk.__init__(self)
        self.title("Ship " + ship.getName()+' ' + ship.getType() + ' ' + str(ship.getID()))
        self.ship=ship

        self.can=Canvas(self, bg="black", width=750, height=500)

        self.createCan()
        self.can.pack()
        self.can.update()

        Button(self, text="Quitter", command=self.quitter).pack()

    def createCan(self):
        self.title("Ship " + self.ship.getName()+' ' + self.ship.getType() + ' ' + str(self.ship.getID()))

        if 'xmlShips' in os.getcwd():
            os.chdir('..')

        locals()['imgwall'] = PhotoImage(file="pictures/fond.gif")
        a = self.can.create_image((0,0), image=locals()['imgwall'])
        print(locals()['imgwall'])

        m = 20 #margin
        c = 3  #coefficient

        #Display rooms and systems in them
        for r in self.ship.getRooms():
            c1, c2 = r.getCoords()
            self.can.create_rectangle(c1[0]*c + m, c1[1]*c + m, c2[0]*c + m, c2[1]*c + m, fill="grey", outline="black")
            system = r.getSystem()

            if system != False :

                locals()['img' + str(r.getNB())] = PhotoImage(file="pictures/systems/"+str(system)+".gif").subsample(5,5)
                cm1, cm2 = c1[0], c1[1]
                if c2[0] - c1[0] != 10:
                    cm1 += 5
                if c2[1] - c1[1] != 10:
                    cm2 += 5
                self.can.create_image((cm1*c + m + 15, cm2*c + m + 15), image=locals()['img'+str(r.getNB())])

        #Basic coords for the statistics for the ship
        c1, c2 = 50, 250
        nb = 20 #Increment for the for

        #Display the stats
        for s in self.ship.getSystems():
            locals()['img' + str(nb)] = PhotoImage(file="pictures/systems/"+s.getName()+".gif").subsample(5, 5)
            self.can.create_image((c1, c2 + (nb-20)*20), image=locals()['img'+str(nb)])
            nb += 1

            for i in range(s.getCurrentMaxPower()):
                self.can.create_rectangle(c1 +10 + i*15, c2 +((nb-20)*20)-25 , c1+20+i*15, c2 + ((nb-20)*20)-15, fill="green", outline="black")

            if s.getName() == 'weaponControl': #Save sur weapon system in sysweap
                sysweap = s
            if s.getName() == 'droneControl': #Save sur weapon system in sysweap
                sysdrone = s

        #Display weapons
        lw = sysweap.getWeapons()
        for weap in range(len(lw)):
            # One place for every weapons
            if weap==0:
                wx, wy = 300, 300
            elif weap==1:
                wx, wy = 300, 400
            elif weap==2:
                wx, wy = 400, 300
            else:
                wx, wy = 400, 400

            print(lw[weap].getName())
            locals()['img' + str(nb)] = PhotoImage(file="pictures/weapons/"+lw[weap].getName()+".gif")
            self.can.create_image(wx, wy, image=locals()['img'+str(nb)])
            nb += 1

        #Display drones
        if self.ship.hasSystem('droneControl'):
            ld=sysdrone.getDrones()
            for drone in range(len(ld)):
                # One place for every weapons
                if drone==0:
                    wx, wy = 500, 300
                elif drone==1:
                    wx, wy = 500, 400
                elif drone==2:
                    wx, wy = 600, 300
                else:
                    wx, wy = 600, 400

                print(ld[drone].getName())
                locals()['img' + str(nb)] = PhotoImage(file="pictures/drones/"+ld[drone].getName()+".gif")
                self.can.create_image(wx, wy, image=locals()['img'+str(nb)])
                nb += 1
        else:
            self.can.create_text((550,350), text='No drones', fill='green', width=40)

        #Display the doors
        doors = self.ship.getDoors()
        for d in doors:
            coords = d.getPosition()
            if str(coords[0])[-1]=='5':
                x1, y1, x2, y2 = coords[0]-2, coords[1], coords[0]+2, coords[1]
            else:
                x1, y1, x2, y2 = coords[0], coords[1]-2, coords[0], coords[1]+2
            self.can.create_line(x1*c+m, y1*c+m, x2*c+m, y2*c+m, fill="red", width=3)

        #Display crew
        for crew in self.ship.getCrew():
            race = crew.getRace()
            x,y = crew.getPosition()

            locals()['img' + str(nb)] = PhotoImage(file="pictures/crew/"+race+".gif").subsample(3, 3)
            self.can.create_image(x*c+m, y*c+m, image=locals()['img'+str(nb)])
            nb += 1

        self.can.update()


    def quitter(self):
        self.quit()
        self.destroy()


def displayShipTK(ship):

    t = Tk()
    t.title("Transparency")
    frame = Frame(t)
    frame.pack()
    can= Canvas(frame, bg="black", width=750, height=500)
    t.title("Ship " + ship.getName()+' ' + ship.getType() + ' ' + str(ship.getID()))

    if 'xmlShips' in os.getcwd():
        os.chdir('..')

    locals()['imgwall'] = PhotoImage(file="pictures/fond.gif")
    can.create_image((0,0), image=locals()['imgwall'])

    m = 20 #margin
    c = 3  #coefficient

    #Display rooms and systems in them
    for r in ship.getRooms():
        c1, c2 = r.getCoords()
        can.create_rectangle(c1[0]*c + m, c1[1]*c + m, c2[0]*c + m, c2[1]*c + m, fill="grey", outline="black")
        system = r.getSystem()

        if system != False :

            locals()['img' + str(r.getNB())] = PhotoImage(file="pictures/systems/"+str(system)+".gif").subsample(5,5)
            cm1, cm2 = c1[0], c1[1]
            if c2[0] - c1[0] != 10:
                cm1 += 5
            if c2[1] - c1[1] != 10:
                cm2 += 5
            can.create_image((cm1*c + m + 15, cm2*c + m + 15), image=locals()['img'+str(r.getNB())])

    #Basic coords for the statistics for the ship
    c1, c2 = 50, 250
    nb = 20 #Increment for the for

    #Display the stats
    for s in ship.getSystems():
        locals()['img' + str(nb)] = PhotoImage(file="pictures/systems/"+s.getName()+".gif").subsample(5, 5)
        can.create_image((c1, c2 + (nb-20)*20), image=locals()['img'+str(nb)])
        nb += 1

        for i in range(s.getCurrentMaxPower()):
            can.create_rectangle(c1 +10 + i*15, c2 +((nb-20)*20)-25 , c1+20+i*15, c2 + ((nb-20)*20)-15, fill="green", outline="black")

        if s.getName() == 'weaponControl': #Save sur weapon system in sysweap
            sysweap = s
        if s.getName() == 'droneControl': #Save sur weapon system in sysweap
            sysdrone = s

    #Display weapons
    lw=sysweap.getWeapons()
    for weap in range(len(lw)):
        # One place for every weapons
        if weap==0:
            wx, wy = 300, 300
        elif weap==1:
            wx, wy = 300, 400
        elif weap==2:
            wx, wy = 400, 300
        else:
            wx, wy = 400, 400

        print(lw[weap].getName())
        locals()['img' + str(nb)] = PhotoImage(file="pictures/weapons/"+lw[weap].getName()+".gif")
        can.create_image(wx, wy, image=locals()['img'+str(nb)])
        nb += 1

    #Display drones
    if ship.hasSystem('droneControl'):
        ld=sysdrone.getDrones()
        for drone in range(len(ld)):
            # One place for every weapons
            if drone==0:
                wx, wy = 500, 300
            elif drone==1:
                wx, wy = 500, 400
            elif drone==2:
                wx, wy = 600, 300
            else:
                wx, wy = 600, 400

            print(ld[drone].getName())
            locals()['img' + str(nb)] = PhotoImage(file="pictures/drones/"+ld[drone].getName()+".gif")
            can.create_image(wx, wy, image=locals()['img'+str(nb)])
            nb += 1
    else:
        can.create_text((550,350), text='No drones', fill='green', width=40)

    #Display the doors
    doors = ship.getDoors()
    for d in doors:
        coords = d.getPosition()
        if str(coords[0])[-1]=='5':
            x1, y1, x2, y2 = coords[0]-2, coords[1], coords[0]+2, coords[1]
        else:
            x1, y1, x2, y2 = coords[0], coords[1]-2, coords[0], coords[1]+2
        can.create_line(x1*c+m, y1*c+m, x2*c+m, y2*c+m, fill="red", width=3)

    #Display crew
    for crew in ship.getCrew():
        race = crew.getRace()
        x,y = crew.getPosition()

        locals()['img' + str(nb)] = PhotoImage(file="pictures/crew/"+race+".gif").subsample(3, 3)
        can.create_image(x*c+m, y*c+m, image=locals()['img'+str(nb)])
        nb += 1


    can.update()


    can.pack()



    Button(text="Quitter",command=lambda: quitter(t) ).pack()

    t.mainloop()

def quitter(self):
    self.quit()
    self.destroy()

def display(ship):
    ship2=FileToShip(ship)

    fen=FenApp(ship2)
    fen.mainloop()



    #displayShipTK(ship2)